version: '2'
services:
  web:
    image: 'gitlab/gitlab-ce:{{ gitlab_version }}'
    hostname: '{{ gitlab_domain }}'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://{{ gitlab_domain }}'
        gitlab_rails['gitlab_shell_ssh_port'] = {{ gitlab_ssh_port }}
        letsencrypt['enable'] = false
        nginx['listen_https'] = false
        nginx['listen_port'] = 80
        nginx['real_ip_trusted_addresses'] = [ '172.16.0.0/12' ]
        nginx['gzip_enabled'] = false

        prometheus_monitoring['enable'] = false

        #Mail settings
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "{{ gitlab_smtp_address }}"
        gitlab_rails['smtp_port'] = {{ gitlab_smtp_port }}
        gitlab_rails['smtp_user_name'] = "{{ gitlab_smtp_user_name }}"
        gitlab_rails['smtp_password'] = "{{ gitlab_smtp_password }}"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_domain'] = "{{ gitlab_smtp_address }}"
        gitlab_rails['smtp_tls'] = {{ gitlab_snmp_tls }}
        gitlab_rails['smtp_openssl_verify_mode'] = 'peer'

        gitlab_rails['gitlab_email_from'] = '{{ gitlab_email_from }}'
        gitlab_rails['gitlab_email_reply_to'] = '{{ gitlab_email_reply_to }}'

        # Use Libravatar
        gitlab_rails['gravatar_enabled'] = true
        gitlab_rails['gravatar_plain_url'] = "http://cdn.libravatar.org/avatar/%{hash}?s=%{size}&d=identicon"
        gitlab_rails['gravatar_ssl_url'] = "https://seccdn.libravatar.org/avatar/%{hash}?s=%{size}&d=identicon"

{% if gitlab_saml is defined %}
        # SAML settings
        gitlab_rails['omniauth_enabled'] = true
        gitlab_rails['omniauth_allow_single_sign_on'] = ['saml']
        gitlab_rails['omniauth_block_auto_created_users'] = true
        gitlab_rails['omniauth_auto_link_ldap_user'] = false
        gitlab_rails['omniauth_auto_link_saml_user'] = true
        gitlab_rails['omniauth_external_providers'] = []
        gitlab_rails['omniauth_providers'] = [
          {
            name: 'saml',
            label: '{{ gitlab_saml.label }}',
            groups_attribute: '{{ gitlab_saml.groups_attribute }}',
            external_groups: ['{{ gitlab_saml.external_groups }}'],
            args: {
                     assertion_consumer_service_url: 'https://{{ gitlab_domain }}/users/auth/saml/callback',
                     idp_cert_fingerprint: '{{ gitlab_saml.idp_cert_fingerprint }}',
                     idp_sso_target_url: '{{ gitlab_saml.idp_sso_target_url }}',
                     issuer: '{{ gitlab_saml.issuer }}',
                     attribute_statements: {
                       first_name: ['{{ gitlab_saml.attribute_statements.first_name }}'],
                       last_name: ['{{ gitlab_saml.attribute_statements.last_name }}'],
                       name: ['{{ gitlab_saml.attribute_statements.name }}'],
                       username: ['{{ gitlab_saml.attribute_statements.username }}'],
                       email: ['{{ gitlab_saml.attribute_statements.email }}'] },
                     name_identifier_format: '{{ gitlab_saml.name_identifier_format }}',
                     upstream_two_factor_authn_contexts:
                       %w(
                         urn:oasis:names:tc:SAML:2.0:ac:classes:CertificateProtectedTransport
                         urn:oasis:names:tc:SAML:2.0:ac:classes:SecondFactorOTPSMS
                         urn:oasis:names:tc:SAML:2.0:ac:classes:SecondFactorIGTOKEN
                       )
                   }
          }
        ]
{% endif %}

    labels:
      - "traefik.frontend.rule=Host:{{ gitlab_domain }};PathPrefix:/"
      - "traefik.frontend.headers.STSSeconds=63072000"
      - "traefik.frontend.headers.contentSecurityPolicy=object-src 'none'; worker-src 'self' blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src * data: blob:; frame-src 'self'; frame-ancestors 'self'; connect-src 'self'"
      - "traefik.port=80"
      - "traefik.enable=true"
{% if proxy_network is defined %}
      - "traefik.docker.network={{ proxy_network }}"
{% endif %}
{% if proxy_hiddenservice is defined %}
      - "traefik.frontend.headers.customResponseHeaders=alt-svc:h2={{ proxy_hiddenservice['content'] | b64decode | trim }}:443; ma=2592000"
{% endif %}
    volumes:
      - "{{ gitlab_data_location }}:/var/opt/gitlab"
      - "{{ gitlab_config_location }}:/etc/gitlab"
      - "{{ gitlab_log_location }}:/var/log/gitlab'"
    restart: always
    ports:
      - "{{ gitlab_ssh_port }}:22"
{% if proxy_network is defined %}
    networks:
      {{ proxy_network }}:
{% endif %}


{% if proxy_network is defined %}
networks:
  {{ proxy_network }}:
    external: true
{% endif %}
